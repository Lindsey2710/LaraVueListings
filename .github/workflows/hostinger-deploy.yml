name: HostingerDeploy

on:
  push:
    branches:
      - main
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Verify Routes Directory
        run: |
          mkdir -p routes
          ls -la routes/
          cp routes/auth.php routes/auth.php || echo "auth.php already exists"

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, json, hash, openssl
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Copy .env
        run: cp .env.example .env

      - name: Install Composer Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Generate Application Key
        run: php artisan key:generate --ansi

      - name: Create Storage Link
        run: php artisan storage:link

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Install NPM Dependencies
        run: npm ci

      - name: Build Vue Assets
        run: npm run build

      - name: Run Tests
        run: php artisan test

      - name: Deploy to Hostinger
        if: ${{ success() }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          port: 22
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd public_html
            git fetch --all
            if [ "${{ github.event_name }}" = "release" ]; then
              git checkout ${{ github.event.release.tag_name }}
            else
              git pull origin main
            fi
            composer install --no-dev --optimize-autoloader
            npm ci
            npm run build
            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            php artisan storage:link
            chmod -R 777 storage bootstrap/cache
